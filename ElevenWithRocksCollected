import random
import pygame

pygame.init() #activates pygame

#pip install pygame in terminal to make it work

win_width, win_height = 500, 500
win = pygame.display.set_mode((500, 500)) #creates game screen
pygame.display.set_caption("Stranger Things") #gives game a name

run = True

#Eleven Varibles
Eleven_image_path = "Image/Eleven.png"
Eleven_image = pygame.image.load(Eleven_image_path)
Eleven_image = pygame.transform.scale(Eleven_image, (50, 50))
background_color = (0, 0, 0)

# Initial position of Eleven
eleven_x = 225
eleven_y = 75
Eleven_speed = 0.25

#General Variables
lifecount = 3
monsterwall = False
rock_image = pygame.image.load("Image/rock.png")

#List
list = [0, 0, 0, 0, 0]
eggoPosition = random.randint(0,4)
list[eggoPosition] = 1
print(list)

#Rock Variables
xrock = random.randint(10,490)
yrock = 0
rocklist = []
rock_speed = 0.05
rock_collected = 0  

# Font
font = pygame.font.SysFont(None, 30)

def create_rock():
    scaled_rock = pygame.transform.scale(rock_image, (20, 20))
    win.blit(scaled_rock, (xrock, yrock))
    rock = pygame.Rect(xrock, yrock, 20, 20)
  
    return rock

def create_eggo():
    eggo = pygame.draw.circle(win, (0, 255, 0), [xrock, yrock], 10, 0)#rock
 
    return eggo

#List
rocklist = [0,0,0,0,0]

eggoPosition = random.randint(0,4)
rocklist[eggoPosition] = 1


#eleven
def draw_eleven(x, y):

    # Draw Eleven at the updated position
    win.blit(Eleven_image, (x, y))

#Monster Variables
xmonster = random.randint(10,490)
ymonster = 500
monsterlist = []

def create_monster():
    monster = pygame.draw.rect(win, (0, 255, 0), (xmonster, ymonster, 20, 50))#rock
    add_monster_list(monster)
    return monster

def add_monster_list(monster):
    monsterlist.append(monster)

#attempt at lives system

run = True #Indicates pygame is running

# infinite loop when game is active

while run:
    # iterate over the list of Event objects
    # that was returned by pygame.event.get() method.

    for event in pygame.event.get():
        # if event object type is QUIT
        # then quitting the pygame
        # and program both.

        if event.type == pygame.QUIT:
            # it will make exit the while loop
            run = False

    #screen setup
    win.fill((0, 0, 0))  # colour of the game screen
    pygame.draw.rect(win, (255, 0, 0), (225, 75, 50, 50))  # cannon
    pygame.draw.line(win, (255, 0, 0), [0, 125], [500, 125], 5)  # dividing line

    # Render text for collected rocks
    text = font.render("Rocks Collected: " + str(rock_collected), True, (255, 255, 255))
    win.blit(text, (10, 10))

    # Check for rock collection
    if rocklist[0] == 0:
        create_rock()
        if yrock <= 105:
            yrock += rock_speed

    elif rocklist[0] == 1:
        create_eggo()
        if yrock <= 105:
            yrock += rock_speed

    # Check if Eleven collects the rock
    if yrock >= 75 and yrock <= 125:  
        if eleven_x <= xrock <= eleven_x + 50:  
            if rock_collected < 5:  # Check if Eleven has collected less than 5 rocks
                rock_collected += 1  # Add onw to the number of rocks collected
                print("Rock collected:", rock_collected)
                # Reset the rock position to fall another one
                xrock = random.randint(10, 490)
                yrock = 0
                rocklist = [0, 0, 0, 0, 0]  # Reset the rocklist
                eggoPosition = random.randint(0, 4)
                rocklist[eggoPosition] = 1





    # Check for monster and Eleven collision
    if ymonster >= 125:
        monster = create_monster()
        ymonster -= 0.1  # later, do this as - level speed

    #moving elevem
    keys = pygame.key.get_pressed()

    if keys[pygame.K_LEFT] and eleven_x - Eleven_speed > 0:  
        eleven_x -= Eleven_speed
    if keys[pygame.K_RIGHT] and eleven_x + Eleven_speed + 50 < win_width: 
        eleven_x += Eleven_speed

    draw_eleven(eleven_x, eleven_y)  

    # Refresh the window
    pygame.display.update()
